class Main
{
    // "" - empty cell
    // "P" - player (max 3 hp)
    // "E1" - enemy (1 hp)
    // "E2" - enemy 
    // "E3" - enemy
    // "BE" - enemy bullet
    // "BP" - player bullet
    // "W" - wall (possible) 
    function void main() 
    {
        //var int x;
        //var int y;
        //var ArrayOfArrays twoDimensionsArray;
        //let twoDimensionsArray = ArrayOfArrays.new(1, 1);
        //do twoDimensionsArray.setItem(0, 0, 1);
        //let x = twoDimensionsArray.getItem(0, 0);
        //do Output.printInt(x); 
        //do Output.printString("Hello");

        /**var int x;
        var int y;
        let x = 0;
        let y = 0;
        do Movement.init();
        while (y<10)
        {
            do Movement.moveEnemy(x, y, "down", 2);
            let y = y + 1;
        }
        return; */
        
        
        var StringArrayOfArrays gameField;
        //var IntArrayOfArrays primeNumbersField;
        var int height, width;
        var int x, y;
        var int hp, cooldown;
        var boolean isGameOver;
        var int enemyDirection; // -1 is "up", 0 is "left", 1 is "down"
        var char userInputKey;
        var int cellSize;
        let cellSize = 16;
        do Movement.init();
        let enemyDirection = -1;
        let isGameOver = false;
        let width = 32;
        let height = 16;
        let gameField = StringArrayOfArrays.new(16, 32);
        let x = 0;
        let y = 0;
        let hp = 3;
        let cooldown = 10;

        while (y < height) // Initializaing of gamefield step
        {
        let x = 0;
            while (x < width)
            {
                if (x > width - 10 & y > 4 & y < 11)
                {
                    if ((x + y) < 34)
                    {
                        do gameField.setItem(y, x, "E1");
                        do Display.displayEnemy(x * cellSize, y * cellSize, false, 1);
                    }
                    if ((x + y) > 33 & (x + y) < 38)
                    {
                        do gameField.setItem(y, x, "E2");
                        do Display.displayEnemy(x * cellSize, y * cellSize, false, 2);
                    }
                    else
                    {
                        do gameField.setItem(y, x, "E3");
                        do Display.displayEnemy(x * cellSize, y * cellSize, false, 3);
                    }
                }
                if (x = 0 & y = 7)
                {
                    do gameField.setItem(y, x, "P");
                }
                else
                { 
                    do gameField.setItem(y, x, " ");
                }
                let x = x + 1;
            }
            let y = y + 1;
        }

        do Display.displayPlayer(0 * cellSize, 7 * cellSize, false);

        while (~isGameOver) // Infnite game loop, exit by key q
        {
            userInputKey = Keyboard.keyPressed();
            if (userInputKey = 113)
            {
                isGameOver = true;
            }
            else
            {
                if (enemyDirection = -1 | enemyDirection = 0)
                {
                    let gameField = fromUpToDownCycle(gameField, userInputKey);
                }
            }
        }

        return;
    }

    method StringArrayOfArrays fromUpToDownCycle(StringArrayOfArrays gameField, char userKey)
    {
        //enemy shoots only if its x + y cells is 5, 13, 23, 31, 43
        var int x, y;
        var int width, height;
        var int tempInt;
        var int cellSize;
        var StringArrayOfArrays nextGameField;
        let nextGameField = StringArrayOfArrays.new(16, 32);
        let cellSize = 16;
        let x = 0;
        let y = 0;
        let width = 32;
        let height = 16;
        while (x < width)
        {
            let y = 0;
            while (y < height)
            {
                do nextGameField.setItem(y, x, " ");
            }
            let x = x + 1;
        }
        let x = 0;
        let y = 0;
        while (x < width)
        {
            let y = 0;
            while (y < height)
            {
                let tempInt = x + y;
                if (stringComparsion.StringComp(gameField.getItem(y, x), "P"))
                {
                    if (userKey = 119) //w
                    {
                        if (y > 0)
                        {
                            do nextGameField.setItem(y - 1, 0, "P");
                            do nextGameField.setItem(y, 0, " ");
                            do Movement.movePlayer(x, y, "up");
                            do Display.displayPlayer(x * cellSize, (y - 1) * cellSize, false);
                        }
                    }
                    if (userKey = 115) //s
                    {

                    }
                    if (userKey = 120) //x
                    {
                        if (y < 256)
                        {
                            str.appendChar(80);
                            nextGameField.getItem(y + 1, x) = str
                        }

                    }
                }
                if (stringComparsion.StringComp(gameField.getItem(y, x), "E1"))
                {

                }
                if (stringComparsion.StringComp(gameField.getItem(y, x), "E2"))
                {

                }
                if (stringComparsion.StringComp(gameField.getItem(y, x), "E3"))
                {

                }
                if (stringComparsion.StringComp(gameField.getItem(y, x), "BE"))
                {

                }
                if (stringComparsion.StringComp(gameField.getItem(y, x), "BP"))
                {

                }
                let y = y + 1;
            }
            let x = x + 1;
        }
        return nextGameField;
    }
}